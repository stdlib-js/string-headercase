{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport base from '@stdlib/string-base-headercase';\n\n\n// MAIN //\n\n/**\n* Converts a string to HTTP header case.\n*\n* @param {string} str - string to convert\n* @throws {TypeError} must provide a string\n* @returns {string} HTTP header-cased string\n*\n* @example\n* var out = headercase( 'foo bar' );\n* // returns 'Foo-Bar'\n*\n* @example\n* var out = headercase( 'IS_MOBILE' );\n* // returns 'Is-Mobile'\n*\n* @example\n* var out = headercase( 'Hello World!' );\n* // returns 'Hello-World'\n*\n* @example\n* var out = headercase( '--foo-bar--' );\n* // returns 'Foo-Bar'\n*/\nfunction headercase( str ) {\n\tif ( !isString( str ) ) {\n\t\tthrow new TypeError( format( '1gt3F,Ex', str ) );\n\t}\n\treturn base( str );\n}\n\n\n// EXPORTS //\n\nexport default headercase;\n"],"names":["headercase","str","isString","TypeError","format","base"],"mappings":";;qSAoDA,SAASA,EAAYC,GACpB,IAAMC,EAAUD,GACf,MAAM,IAAIE,UAAWC,EAAQ,WAAYH,IAE1C,OAAOI,EAAMJ,EACd"}